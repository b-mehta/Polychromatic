on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build Lean files
        uses: leanprover/lean-action@main
        with:
          mk_all-check: true
          lake-package-directory: Lean
      - name: Run Verso
        working-directory: Verso
        run: lake exe docs
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@472790540115ce5bd69d399a020189a8c87d641f
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          working-directory: site
      - name: Build with Jekyll
        run: bundle exec jekyll build --destination ../_site --baseurl "${{ steps.pages.outputs.base_path }}"
        working-directory: site
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        if: github.event_name == 'push'
        uses: actions/upload-pages-artifact@v3

      # Run cleaning script
      - name: Remove annotations
        if: github.event_name == 'push'
        run: |
          find . -type f -name "*.lean" -print0 | while IFS= read -r -d $'\0' file; do
              sed -i '/^-- ANCHOR:/d;/^-- ANCHOR_END:/d' "$file"
          done
          echo "Annotation removal complete."
          rm -rf Verso site _site

      # Commit and push changes
      - name: Commit and Push to release branch
        if: github.event_name == 'push'
        run: |
          # Configure git user for the commit
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add all modified files to the staging area
          git add .

          # Commit the cleaned files
          git commit -m "Deploy: Sync clean code from main branch" --allow-empty

          # Force-push the most recent commit to the 'release' branch.
          git push -f origin HEAD:refs/heads/release

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

